import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as r,c as p,a as e,b as t,d as a,e as o,r as c}from"./app.75ca2a8e.js";const i={},d=o(`<p><strong>Description</strong></p><p>Use layer space transform methods to transform values from one space toanother, such as from layer space to world space. The <code>from</code> methods transformvalues from the named space (composition or world) to the layer space.</p><p>The <code>to</code> methods transform values from the layer space to the named space(composition or world). Each transform method takes an optional argument todetermine the time at which the transform is computed; however, you can almostalways use the current (default) time.</p><p>Use <code>Vec</code> transform methods when transforming a direction vector, such as thedifference between two position values.</p><p>Use the plain (non-<code>Vec</code>) transform methods when transforming a point, such as position.</p><p>Composition (comp) and world space are the same for 2D layers. For 3D layers,however, composition space is relative to the active camera, and world spaceis independent of the camera.</p><hr><h2 id="tocomp-point-t-time" tabindex="-1"><a class="header-anchor" href="#tocomp-point-t-time" aria-hidden="true">#</a> toComp(<code>point</code>, <code>t=time</code>)</h2><p><strong>Description</strong></p><p>Transforms a point from layer space to composition space.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>point</code></td><td>Array (2- or 3-dimensional)</td></tr><tr><td><code>t</code></td><td>Number</td></tr></tbody></table><p><strong>Type</strong></p><p>Array (2- or 3-dimensional)</p><hr><h2 id="fromcomp-point-t-time" tabindex="-1"><a class="header-anchor" href="#fromcomp-point-t-time" aria-hidden="true">#</a> fromComp(<code>point</code>, <code>t=time</code>)</h2><p><strong>Description</strong></p><p>Transforms a point from composition space to layer space. The resulting pointin a 3D layer may have a nonzero value even though it is in layer space.</p><p>Example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fromComp</span><span class="token punctuation">(</span>thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>point</code></td><td>Array (2- or 3-dimensional)</td></tr><tr><td><code>t</code></td><td>Number</td></tr></tbody></table><p><strong>Type</strong></p><p>Array (2- or 3-dimensional)</p><hr><h2 id="toworld-point-t-time" tabindex="-1"><a class="header-anchor" href="#toworld-point-t-time" aria-hidden="true">#</a> toWorld(<code>point</code>, <code>t=time</code>)</h2><p><strong>Description</strong></p><p>Transforms a point from layer space to view-independent world space.</p><p>Example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>toWorld<span class="token punctuation">.</span><span class="token function">effect</span><span class="token punctuation">(</span><span class="token string">&quot;Bulge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;Bulge Center&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>..note::</p>`,31),l={href:"http://www.motionscript.com/design-guide/auto-orient-y-only.html",target:"_blank",rel:"noopener noreferrer"},u=e("code",null,"toWorld",-1),m=e("p",null,"..note::",-1),h={href:"http://aeportal.blogspot.com/2010/02/fly-around-cc-sphered-layer-in-after.html",target:"_blank",rel:"noopener noreferrer"},f=o(`<p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>point</code></td><td>Array (2- or 3-dimensional)</td></tr><tr><td><code>t</code></td><td>Number</td></tr></tbody></table><p><strong>Type</strong></p><p>Array (2- or 3-dimensional)</p><hr><h2 id="fromworld-point-t-time" tabindex="-1"><a class="header-anchor" href="#fromworld-point-t-time" aria-hidden="true">#</a> fromWorld(<code>point</code>, <code>t=time</code>)</h2><p><strong>Description</strong></p><p>Transforms a point from world space to layer space.</p><p>Example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fromWorld</span><span class="token punctuation">(</span>thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>See Expression example: Create a bulge between two layers for an example ofhow this method can be used.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>point</code></td><td>Array (2- or 3-dimensional)</td></tr><tr><td><code>t</code></td><td>Number</td></tr></tbody></table><p><strong>Type</strong></p><p>Array (2- or 3-dimensional)</p><hr><h2 id="tocompvec-vec-t-time" tabindex="-1"><a class="header-anchor" href="#tocompvec-vec-t-time" aria-hidden="true">#</a> toCompVec(vec, <code>t=time</code>)</h2><p><strong>Description</strong></p><p>Transforms a vector from layer space to composition space.</p><p>Example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">toCompVec</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>vec</code></td><td>Array (2- or 3-dimensional)</td></tr><tr><td><code>t</code></td><td>Number</td></tr></tbody></table><p><strong>Type</strong></p><p>Array (2- or 3-dimensional)</p><hr><h2 id="fromcompvec-vec-t-time" tabindex="-1"><a class="header-anchor" href="#fromcompvec-vec-t-time" aria-hidden="true">#</a> fromCompVec(vec, <code>t=time</code>)</h2><p><strong>Description</strong></p><p>Transforms a vector from composition space to layer space.</p><p>Example (2D layer):</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dir <span class="token operator">=</span> <span class="token function">sub</span><span class="token punctuation">(</span>position<span class="token punctuation">,</span> thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">fromCompVec</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>vec</code></td><td>Array (2- or 3-dimensional)</td></tr><tr><td><code>t</code></td><td>Number</td></tr></tbody></table><p><strong>Type</strong></p><p>Array (2- or 3-dimensional)</p><hr><h2 id="toworldvec-vec-t-time" tabindex="-1"><a class="header-anchor" href="#toworldvec-vec-t-time" aria-hidden="true">#</a> toWorldVec(vec, <code>t=time</code>)</h2><p><strong>Description</strong></p><p>Transforms a vector from layer space to world space.</p><p>Example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>p1 <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token string">&quot;Eye Bulge 1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;Bulge Center&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> p2 <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span>&quot;Eye
Bulge <span class="token number">2</span><span class="token string">&quot;)(&quot;</span>Bulge Center&quot;<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">toWorld</span><span class="token punctuation">(</span><span class="token function">sub</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>vec</code></td><td>Array (2- or 3-dimensional)</td></tr><tr><td><code>t</code></td><td>Number</td></tr></tbody></table><p><strong>Type</strong></p><p>Array (2- or 3-dimensional)</p><hr><h2 id="fromworldvec-vec-t-time" tabindex="-1"><a class="header-anchor" href="#fromworldvec-vec-t-time" aria-hidden="true">#</a> fromWorldVec(<code>vec</code>, <code>t=time</code>)</h2><p><strong>Description</strong></p><p>Transforms a vector from world space to layer space.</p><p>Example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fromWorld</span><span class="token punctuation">(</span>thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>vec</code></td><td>Array (2- or 3-dimensional)</td></tr><tr><td><code>t</code></td><td>Number</td></tr></tbody></table><p><strong>Type</strong></p><p>Array (2- or 3-dimensional)</p><hr><h2 id="fromcomptosurface-point-t-time" tabindex="-1"><a class="header-anchor" href="#fromcomptosurface-point-t-time" aria-hidden="true">#</a> fromCompToSurface(<code>point</code>, <code>t=time</code>)</h2><p><strong>Description</strong></p><p>Projects a point located in composition space to a point on the surface of thelayer (zero z-value) at the location where it appears when viewed from theactive camera. This method is useful for setting effect control points. Use with 3D layers only.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>point</code></td><td>Array (2- or 3-dimensional)</td></tr><tr><td><code>t</code></td><td>Number</td></tr></tbody></table><p><strong>Type</strong></p><p>Array (2-dimensional)</p>`,63);function g(v,y){const n=c("ExternalLinkIcon");return r(),p("div",null,[d,e("p",null,[t("Dan Ebberts provides an expression on his "),e("a",l,[t("MotionScriptwebsite"),a(n)]),t("that uses the "),u,t(" method to auto-orient a layer along only one axis.This is useful, for example, for having characters turn from side to side tofollow the camera while remaining upright.")]),m,e("p",null,[t("Rich Young provides a set of expressions on his "),e("a",h,[t("AE Portalwebsite"),a(n)]),t(" that use the toWorld method link a camera and light to a layerwith the CC Sphere effect.")]),f])}const w=s(i,[["render",g],["__file","Space-Transforms.html.vue"]]);export{w as default};
