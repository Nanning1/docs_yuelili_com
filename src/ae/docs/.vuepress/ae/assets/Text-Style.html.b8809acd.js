import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as l,a as t,b as e,d as a,w as d,e as i,r}from"./app.75ca2a8e.js";const h={},c=t("h2",{id:"description",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#description","aria-hidden":"true"},"#"),e(" Description")],-1),u=t("p",null,"For more info on working with text styles, see:",-1),y={href:"https://helpx.adobe.com/after-effects/user-guide.html/after-effects/using/expressions-text-properties.ug.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://blog.adobe.com/en/2020/01/24/after-effects-2020-express-yourself-and-your-text.html#gs.uwyfgz",target:"_blank",rel:"noopener noreferrer"},x=i(`<hr><h2 id="textstyle-settext-value" tabindex="-1"><a class="header-anchor" href="#textstyle-settext-value" aria-hidden="true">#</a> TextStyle.setText(<code>value</code>)</h2><p><strong>Description</strong></p><p>This is used when you want to define (or inherit) a text style, while settingthe text content separately.</p><p>For example, to inherit the text style and content from another layer:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> referenceText <span class="token operator">=</span> thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span>&quot;source layer
name&quot;<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">.</span>sourceText<span class="token punctuation">;</span> <span class="token keyword">const</span> style <span class="token operator">=</span> referenceText<span class="token punctuation">.</span><span class="token function">getStyleAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>style<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>referenceText<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Or to create a custom style and then set the text within the expression:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>text<span class="token punctuation">.</span>sourceText<span class="token punctuation">.</span><span class="token function">createStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token string">&quot;Impact&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>&quot;Hello
world<span class="token operator">!</span>&quot;<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>String. The text to set</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-fontsize" tabindex="-1"><a class="header-anchor" href="#textstyle-fontsize" aria-hidden="true">#</a> TextStyle.fontSize</h2><p><strong>Description</strong></p><p>Returns the value of Font Size for a text layer.</p><p><strong>Type</strong></p><p>Number</p><hr><h2 id="textstyle-setfontsize-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setfontsize-value" aria-hidden="true">#</a> TextStyle.setFontSize(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the font size to a specified value.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Number. The font size to set to.</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-font" tabindex="-1"><a class="header-anchor" href="#textstyle-font" aria-hidden="true">#</a> TextStyle.font</h2><p><strong>Description</strong></p><p>Returns the font name for a text layer.</p><p><strong>Type</strong></p><p>String</p><hr><h2 id="textstyle-setfont-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setfont-value" aria-hidden="true">#</a> TextStyle.setFont(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the font to a specified value.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>String. The font to set to.</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-isfauxbold" tabindex="-1"><a class="header-anchor" href="#textstyle-isfauxbold" aria-hidden="true">#</a> TextStyle.isFauxBold</h2><p><strong>Description</strong></p><p>Returns whether faux bold is enabled</p><p><strong>Type</strong></p><p>Boolean</p><hr><h2 id="textstyle-setfauxbold-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setfauxbold-value" aria-hidden="true">#</a> TextStyle.setFauxBold(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the faux bold status</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Boolean. Whether to enable or disable faux bold</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-isfauxitalic" tabindex="-1"><a class="header-anchor" href="#textstyle-isfauxitalic" aria-hidden="true">#</a> TextStyle.isFauxItalic</h2><p><strong>Description</strong></p><p>Returns whether faux italic is enabled</p><p><strong>Type</strong></p><p>Boolean</p><hr><h2 id="textstyle-setfauxitalic-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setfauxitalic-value" aria-hidden="true">#</a> TextStyle.setFauxItalic(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the faux italic status</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Boolean. Whether to enable or disable faux italic</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-isallcaps" tabindex="-1"><a class="header-anchor" href="#textstyle-isallcaps" aria-hidden="true">#</a> TextStyle.isAllCaps</h2><p><strong>Description</strong></p><p>Returns whether all caps is enabled</p><p><strong>Type</strong></p><p>Boolean</p><hr><h2 id="textstyle-setallcaps-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setallcaps-value" aria-hidden="true">#</a> TextStyle.setAllCaps(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the All Caps status</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Boolean. Whether to enable or disable all caps</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-issmallcaps" tabindex="-1"><a class="header-anchor" href="#textstyle-issmallcaps" aria-hidden="true">#</a> TextStyle.isSmallCaps</h2><p><strong>Description</strong></p><p>Returns whether small caps is enabled</p><p><strong>Type</strong></p><p>Boolean</p><hr><h2 id="textstyle-setsmallcaps-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setsmallcaps-value" aria-hidden="true">#</a> TextStyle.setSmallCaps(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the small caps status</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Boolean. Whether to enable or disable small caps</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-tracking" tabindex="-1"><a class="header-anchor" href="#textstyle-tracking" aria-hidden="true">#</a> TextStyle.tracking</h2><p><strong>Description</strong></p><p>Returns the value of Tracking for a text layer.</p><p><strong>Type</strong></p><p>Number</p><hr><h2 id="textstyle-settracking-value" tabindex="-1"><a class="header-anchor" href="#textstyle-settracking-value" aria-hidden="true">#</a> TextStyle.setTracking(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the tracking to a specified value.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Number. The tracking value to set to.</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-leading" tabindex="-1"><a class="header-anchor" href="#textstyle-leading" aria-hidden="true">#</a> TextStyle.leading</h2><p><strong>Description</strong></p><p>Returns the value of leading for a text layer.</p><p><strong>Type</strong></p><p>Number</p><hr><h2 id="textstyle-setleading-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setleading-value" aria-hidden="true">#</a> TextStyle.setLeading(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the leading to a specified value.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Number. The leading value to set to.</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-isautoleading" tabindex="-1"><a class="header-anchor" href="#textstyle-isautoleading" aria-hidden="true">#</a> TextStyle.isAutoLeading</h2><p><strong>Description</strong></p><p>Returns whether auto leading is enabled</p><p><strong>Type</strong></p><p>Boolean</p><hr><h2 id="textstyle-setautoleading-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setautoleading-value" aria-hidden="true">#</a> TextStyle.setAutoLeading(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the auto leading status</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Boolean. Whether to enable or disable auto leading</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-baselineshift" tabindex="-1"><a class="header-anchor" href="#textstyle-baselineshift" aria-hidden="true">#</a> TextStyle.baselineShift</h2><p><strong>Description</strong></p><p>Returns the value of baseline shift for a text layer.</p><p><strong>Type</strong></p><p>Number</p><hr><h2 id="textstyle-setbaselineshift-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setbaselineshift-value" aria-hidden="true">#</a> TextStyle.setBaselineShift(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the baseline shift to a specified value.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Number. The baseline shift value to set to.</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-applyfill" tabindex="-1"><a class="header-anchor" href="#textstyle-applyfill" aria-hidden="true">#</a> TextStyle.applyFill</h2><p><strong>Description</strong></p><p>Returns whether text fill color is enabled</p><p><strong>Type</strong></p><p>Boolean</p><hr><h2 id="textstyle-setapplyfill-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setapplyfill-value" aria-hidden="true">#</a> TextStyle.setApplyFill(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set whether text fill is enabled</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Boolean. Whether to enable or disable apply fill</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-fillcolor" tabindex="-1"><a class="header-anchor" href="#textstyle-fillcolor" aria-hidden="true">#</a> TextStyle.fillColor</h2><p><strong>Description</strong></p><p>Returns the text fill color, RGB values on a scale from 0 - 1.0</p><p><strong>Type</strong></p><p>Array of numbers</p><hr><h2 id="textstyle-setfillcolor-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setfillcolor-value" aria-hidden="true">#</a> TextStyle.setFillColor(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the text fill color</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Array of numbers. <code>[R, G, B]</code> with each value between 0.0 to 1.0</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-applystroke" tabindex="-1"><a class="header-anchor" href="#textstyle-applystroke" aria-hidden="true">#</a> TextStyle.applyStroke</h2><p><strong>Description</strong></p><p>Returns whether text stroke is enabled</p><p><strong>Type</strong></p><p>Boolean</p><hr><h2 id="textstyle-setapplystroke-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setapplystroke-value" aria-hidden="true">#</a> TextStyle.setApplyStroke(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set whether text stroke is enabled</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Boolean. Whether to enable or disable text stroke</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-strokecolor" tabindex="-1"><a class="header-anchor" href="#textstyle-strokecolor" aria-hidden="true">#</a> TextStyle.strokeColor</h2><p><strong>Description</strong></p><p>Returns the text stroke color, RGB values on a scale from 0 - 1.0</p><p><strong>Type</strong></p><p>Array of numbers</p><hr><h2 id="textstyle-setstrokecolor-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setstrokecolor-value" aria-hidden="true">#</a> TextStyle.setStrokeColor(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the text stroke color</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Array of numbers. <code>[R, G, B]</code> with each value between 0.0 to 1.0</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p><hr><h2 id="textstyle-strokewidth" tabindex="-1"><a class="header-anchor" href="#textstyle-strokewidth" aria-hidden="true">#</a> TextStyle.strokeWidth</h2><p><strong>Description</strong></p><p>Returns the stroke width value for a text layer.</p><p><strong>Type</strong></p><p>Number</p><hr><h2 id="textstyle-setstrokewidth-value" tabindex="-1"><a class="header-anchor" href="#textstyle-setstrokewidth-value" aria-hidden="true">#</a> TextStyle.setStrokeWidth(<code>value</code>)</h2><p><strong>Description</strong></p><p>Used to set the stroke width to a specified value.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>value</code></td><td>Number. The value to set the stroke width to.</td></tr></tbody></table><p><strong>Type</strong></p><p>None</p>`,222);function b(f,v){const o=r("RouterLink"),s=r("ExternalLinkIcon");return p(),l("div",null,[c,t("p",null,[e("These functions are accessible from "),a(o,{to:"/en/ae/expression/Text/text-sourcetext.html#sourcetext-style"},{default:d(()=>[e("SourceText.style")]),_:1}),e(" after AE 17.0.")]),u,t("ul",null,[t("li",null,[t("p",null,[t("a",y,[e("Use Expressions to Edit and Access Text Properties on helpx.adobe.com"),a(s)])])]),t("li",null,[t("p",null,[t("a",g,[e("After Effects 2020: Express Yourself (and Your Text) on blog.adobe.com"),a(s)])])])]),x])}const m=n(h,[["render",b],["__file","Text-Style.html.vue"]]);export{m as default};
