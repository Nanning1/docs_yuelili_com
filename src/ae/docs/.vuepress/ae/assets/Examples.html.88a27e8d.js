import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a,b as n,d as t,e,r as i}from"./app.75ca2a8e.js";const l={},u=e(`<p>:::info Note</p><p>Dan Ebberts \u63D0\u4F9B\u7684\u57FA\u7840\u793A\u4F8B :::</p><hr><h2 id="\u83B7\u53D6\u5DE5\u7A0B\u540D\u79F0-ae-15-1-only" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u5DE5\u7A0B\u540D\u79F0-ae-15-1-only" aria-hidden="true">#</a> \u83B7\u53D6\u5DE5\u7A0B\u540D\u79F0 (AE 15.1+ only)</h2><p>\u5148\u83B7\u53D6\u5B8C\u6574\u8DEF\u5F84,\u63A5\u7740\u518D\u5904\u7406\u8DEF\u5F84\u5B57\u7B26\u4E32:</p><p>::: danger \u6708\u79BB\u5907\u6CE8 \u8BD5\u4E86\u6CA1\u7528. $.os \u5E94\u8BE5\u662F\u811A\u672C\u8BED\u6CD5,\u8FD9\u91CC\u5E94\u8BE5\u53D1\u9519\u4E86 :::</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> aepName <span class="token operator">=</span> thisProject<span class="token punctuation">.</span>fullPath<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>os<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Windows&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&quot;\\\\&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E5F\u53EF\u4EE5\u4FDD\u7559\u672A\u4FDD\u5B58\u5DE5\u7A0B\u7684\u540D\u79F0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> aepName <span class="token operator">=</span> thisProject<span class="token punctuation">.</span>fullPath<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>os<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Windows&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&quot;\\\\&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
aepName <span class="token operator">=</span> aepName <span class="token operator">===</span> <span class="token string">&quot;&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;Unsaved&quot;</span> <span class="token operator">:</span> aepName<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="\u8BA9\u56FE\u5C42\u5706\u5F62\u65CB\u8F6C" tabindex="-1"><a class="header-anchor" href="#\u8BA9\u56FE\u5C42\u5706\u5F62\u65CB\u8F6C" aria-hidden="true">#</a> \u8BA9\u56FE\u5C42\u5706\u5F62\u65CB\u8F6C</h2><ol><li>\u9009\u62E9\u56FE\u5C42,\u7ED9\u4F4D\u7F6E\u6253\u8868\u8FBE\u5F0F</li></ol><p>2.\u8F93\u5165\u4EE5\u4E0B\u8868\u8FBE\u5F0F:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span>thisComp<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> thisComp<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="\u65F6\u9488\u65CB\u8F6C" tabindex="-1"><a class="header-anchor" href="#\u65F6\u9488\u65CB\u8F6C" aria-hidden="true">#</a> \u65F6\u9488\u65CB\u8F6C</h2><p>\u4F7F\u7528\u87BA\u65CB\u6311\u97AD(\u8868\u8FBE\u5F0F\u9009\u62E9\u5668)\u6765\u8FDE\u63A5\u5404\u5C42\u4E4B\u95F4\u7684\u65CB\u8F6C\u503C\uFF0C\u4F7F\u65F6\u949F\u4E0A\u7684\u6307\u9488\u65CB\u8F6C\u7684\u540C\u65F6\uFF0C\u5206\u9488\u968F\u5176\u9009\u62E9\u3002</p><p>\u5982\u679C\u4E24\u4E2A\u6307\u9488\u5206\u522B\u8BBE\u7F6E\u5173\u952E\u5E27\uFF0C\u8FD9\u79CD\u7C7B\u578B\u7684\u52A8\u753B K \u8D77\u6765\u8D39\u65F6\u8D39\u529B\uFF0C\u4F46\u4F7F\u7528\u6311\u97AD\uFF0C\u5206\u5206\u949F\u641E\u5B9A\u3002</p><ol><li><p>\u7ED8\u5236\u4E00\u4E2A\u65F6\u9488\u548C\u5206\u9488(\u968F\u4FBF 2 \u4E2A\u77E9\u5F62\u5C31\u884C)</p></li><li><p>\u628A\u5B83\u4EEC\u7684\u951A\u70B9\u62C9\u5012\u56FE\u5C42\u5C3E\u90E8</p></li><li><p>\u79FB\u52A8\u56FE\u5C42,\u4F7F\u5176\u951A\u70B9\u91CD\u5408\u5728\u5408\u6210\u4E2D\u5FC3</p></li><li><p>\u4E3A\u65F6\u9488\u8BBE\u7F6E\u65CB\u8F6C\u5173\u952E\u5E27\u3002</p></li><li><p>\u9009\u62E9\u5206\u9488\u7684\u65CB\u8F6C\u5C5E\u6027 : <code>\u52A8\u753B &gt; \u6DFB\u52A0\u8868\u8FBE\u5F0F.</code></p></li><li><p>\u62D6\u52A8\u5206\u9488\u7684\u87BA\u65CB\u6311\u97AD(\u8868\u8FBE\u5F0F\u9009\u62E9\u5668)\u81F3\u65F6\u9488,\u4F1A\u4EE5\u4E0B\u8868\u8FBE\u5F0F:</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token string">&quot;\u65F6\u9488&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rotation<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7"><li>\u8BBE\u7F6E\u5206\u9488\u65CB\u8F6C\u901F\u5EA6\u4E3A\u65F6\u9488\u7684 12 \u500D,\u540E\u9762\u52A0<code>* 12</code>\u5373\u53EF:</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token string">&quot;hour hand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rotation <span class="token operator">*</span> <span class="token number">12</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="\u56FE\u5C42\u5728\u53E6\u5916-2-\u4E2A\u56FE\u5C42\u4E2D\u95F4" tabindex="-1"><a class="header-anchor" href="#\u56FE\u5C42\u5728\u53E6\u5916-2-\u4E2A\u56FE\u5C42\u4E2D\u95F4" aria-hidden="true">#</a> \u56FE\u5C42\u5728\u53E6\u5916 2 \u4E2A\u56FE\u5C42\u4E2D\u95F4</h2><p>This example expression positions and maintains one layer at a balanceddistance between two other layers.</p><ol><li><p>Start with three layers.</p></li><li><p>Animate the positions of the first two layers in the Timeline panel.</p></li><li><p>Select the third layer, press P to reveal the Position property, and Alt-click (Windows) or Option-click (Mac OS) the stopwatch button to the left of the property name.</p></li><li><p>Enter the following in the expression field:</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span>thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>position <span class="token operator">+</span> thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>position<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="\u521B\u5EFA\u56FE\u7247\u62D6\u5C3E" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u56FE\u7247\u62D6\u5C3E" aria-hidden="true">#</a> \u521B\u5EFA\u56FE\u7247\u62D6\u5C3E</h2><p>This example expression instructs a layer to be at the same position as thenext higher layer in the Timeline panel, but delayed by a specified amount oftime (in this case, 0.5 seconds). You can set similar expressions for theother geometric properties.</p><ol><li><p>Start with two solid-color layers that are scaled to approximately 30% of the composition size. (See Solid-color layers and solid-color footage items.)</p></li><li><p>Animate the position of the first layer.</p></li><li><p>Select the second layer, press P to reveal the Position property, and Alt-click (Windows) or Option-click (Mac OS) the stopwatch button to the left of the property name.</p></li><li><p>Enter the following in the expression field:</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span>thisLayer<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">valueAtTime</span><span class="token punctuation">(</span>time <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>Duplicate the last layer five times by selecting it and pressing Ctrl+D (Windows) or Command+D (Mac OS) five times.</li></ol><p>All layers follow the same path, and each is delayed 0.5 seconds from the previous.</p><p>:::info Note</p>`,35),r={href:"http://www.motionscript.com/mastering-expressions/follow-the-leader.html",target:"_blank",rel:"noopener noreferrer"},k=e(`<hr><h2 id="create-a-bulge-between-two-layers" tabindex="-1"><a class="header-anchor" href="#create-a-bulge-between-two-layers" aria-hidden="true">#</a> Create a bulge between two layers</h2><p>This example expression synchronizes the Bulge Center argument of the Bulgeeffect in one layer with the position of another layer. For example, you cancreate an effect that looks like a magnifying glass moving over a layer, withthe contents under the magnifying glass bulging as the lens (that is, theoverlying layer) moves. This expression uses the fromWorld method, which makesthe expression work correctly regardless of whether you move the magnifyingglass layer or the underlying layer. You can rotate or scale the underlyinglayer, and the expression stays intact.</p><p>You can also use other effects, such as Ripple, with this expression.</p><ol><li><p>Start with two layers. Make one layer a magnifying glass or similar object with a hole in the middle and name it Magnifier. (See Creating layers.)</p></li><li><p>Animate the position of the magnifying glass layer. (See Motion paths.)</p></li><li><p>Apply the Bulge effect to the other layer. (See Apply an effect or animation preset.)</p></li><li><p>Select the Bulge Center property of the Bulge effect in the Timeline panel and choose Animation &gt; Add Expression, or Alt-click (Windows) or Option-click (Mac OS) the stopwatch button for the property.</p></li><li><p>Select the default expression text and type the following:</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fromWorld</span><span class="token punctuation">(</span>thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token string">&quot;Magnifier&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="fade-opacity-of-a-3d-layer-based-on-distance-from-camera" tabindex="-1"><a class="header-anchor" href="#fade-opacity-of-a-3d-layer-based-on-distance-from-camera" aria-hidden="true">#</a> Fade opacity of a 3D layer based on distance from camera</h2><p>Apply the following expression to the Opacity property of a 3D layer:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>startFade <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span> <span class="token comment">// Start fade 500 pixels from camera.</span>
endFade <span class="token operator">=</span> <span class="token number">1500</span><span class="token punctuation">;</span> <span class="token comment">// End fade 1500 pixels from camera.</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token comment">// Check whether there&#39;s a camera</span>
  <span class="token constant">C</span> <span class="token operator">=</span> thisComp<span class="token punctuation">.</span>activeCamera<span class="token punctuation">.</span><span class="token function">toWorld</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Nocamera, so assume 50mm</span>
  w <span class="token operator">=</span> thisComp<span class="token punctuation">.</span>width <span class="token operator">*</span> thisComp<span class="token punctuation">.</span>pixelAspect<span class="token punctuation">;</span>
  z <span class="token operator">=</span> w <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token function">tan</span><span class="token punctuation">(</span><span class="token function">degreesToRadians</span><span class="token punctuation">(</span><span class="token number">19.799</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token constant">C</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token constant">P</span> <span class="token operator">=</span> <span class="token function">toWorld</span><span class="token punctuation">(</span>anchorPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>
d <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token constant">C</span><span class="token punctuation">,</span> <span class="token constant">P</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">linear</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> startFade<span class="token punctuation">,</span> endFade<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The fade starts at a distance of <code>500</code> pixels from the camera and is completeat <code>1500</code> pixels from the camera. The linear interpolation method is used tomap distance values to opacity values.</p><hr><h2 id="make-a-3d-layer-invisible-if-facing-away-from-camera" tabindex="-1"><a class="header-anchor" href="#make-a-3d-layer-invisible-if-facing-away-from-camera" aria-hidden="true">#</a> Make a 3D layer invisible if facing away from camera</h2><p>Apply the following expression to the Opacity property of a 3D layer:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">toCompVec</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">)</span> value <span class="token keyword">else</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>:::info Note</p>`,16),d={href:"http://www.adobe.com/go/learn_ae_motionscriptinvisiblelayer",target:"_blank",rel:"noopener noreferrer"},m=e(`<hr><h2 id="flip-layer-horizontally-if-facing-away-from-camera" tabindex="-1"><a class="header-anchor" href="#flip-layer-horizontally-if-facing-away-from-camera" aria-hidden="true">#</a> Flip layer horizontally if facing away from camera</h2><p>Apply the following expression to the Scale property of a 3D layer:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">toCompVec</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">)</span> value <span class="token keyword">else</span> <span class="token punctuation">[</span><span class="token operator">-</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> value<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="animate-scale-at-each-layer-marker" tabindex="-1"><a class="header-anchor" href="#animate-scale-at-each-layer-marker" aria-hidden="true">#</a> Animate scale at each layer marker</h2><p>Apply the following expression to a Scale property to make a layer wobble at each marker:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>marker<span class="token punctuation">.</span>numKeys <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  n <span class="token operator">=</span>marker<span class="token punctuation">.</span><span class="token function">nearestKey</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span>index<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>marker<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span>time <span class="token operator">&gt;</span> time<span class="token punctuation">)</span> n\\<span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span> t <span class="token operator">=</span> time <span class="token operator">-</span> marker<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span>time<span class="token punctuation">;</span>
amp <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>
freq <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
decay <span class="token operator">=</span> <span class="token number">3.0</span><span class="token punctuation">;</span>
angle <span class="token operator">=</span>freq <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> t<span class="token punctuation">;</span>
scaleFact <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">+</span> amp <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>angle<span class="token punctuation">)</span> <span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token function">exp</span><span class="token punctuation">(</span>decay <span class="token operator">*</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> scaleFact<span class="token punctuation">,</span> value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> scaleFact<span class="token punctuation">]</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="start-or-stop-wiggle-at-specific-time" tabindex="-1"><a class="header-anchor" href="#start-or-stop-wiggle-at-specific-time" aria-hidden="true">#</a> Start or stop wiggle at specific time</h2><p>You can use any expression in place of the wiggle expression used here, tobegin and end the influence of any expression at a specific time.</p><p>Apply the following expression to a property to wiggle it beginning at time 2 seconds:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>timeToStart <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>time <span class="token operator">&gt;</span> timeToStart<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">wiggle</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Apply the following expression to a property to stop wiggling it at time 4 seconds:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>timeToStop <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>time <span class="token operator">&gt;</span> timeToStop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  value<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token function">wiggle</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Apply the following expression to a property to start wiggling it at time 2seconds and stop wiggling it at time 4 seconds:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>timeToStart <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
timeToStop <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>time <span class="token operator">&gt;</span> timeToStart <span class="token operator">&amp;&amp;</span> time <span class="token operator">&lt;</span> timeToStop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">wiggle</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="match-camera-focal-plane-to-another-layer" tabindex="-1"><a class="header-anchor" href="#match-camera-focal-plane-to-another-layer" aria-hidden="true">#</a> Match camera focal plane to another layer</h2><p>Apply the following expression to the Focus Distance property of a cameralayer to have its focus distance match the distance to the anchor point of a layer named \u201Ctarget\u201D:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>target <span class="token operator">=</span> thisComp<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token string">&quot;target&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">V1</span> <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">toWorld</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>anchorPoint<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">toWorld</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">V2</span> <span class="token operator">=</span> <span class="token function">toWorldVec</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">dot</span><span class="token punctuation">(</span><span class="token constant">V1</span><span class="token punctuation">,</span> <span class="token constant">V2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::info Note</p>`,22),h={href:"http://motionscript.com/design-guide/auto-focus.html",target:"_blank",rel:"noopener noreferrer"};function v(b,f){const s=i("ExternalLinkIcon");return o(),c("div",null,[u,a("p",null,[n("Dan Ebberts provides more examples and techniques for creating trails ofimages on his "),a("a",r,[n("MotionScript"),t(s)]),n(". :::")]),k,a("p",null,[n("Dan Ebberts explains this expression on his"),a("a",d,[n("site"),t(s)]),n(". :::")]),m,a("p",null,[n("Dan Ebberts explains this expression example in detail on his"),a("a",h,[n("website"),t(s)]),n(". :::")])])}const w=p(l,[["render",v],["__file","Examples.html.vue"]]);export{w as default};
