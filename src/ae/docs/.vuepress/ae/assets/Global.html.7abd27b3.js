import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as d,c,a as t,b as e,d as n,w as o,e as a,r}from"./app.75ca2a8e.js";const l={},u=a("<p>These globally available functions that are specific to After Effects. AnyJavaScript object or function can call these functions, which allow you todisplay text in a small (3-line) area of the Info panel, to convert numerictime values to and from string values, or to generate a random number.</p><table><thead><tr><th>Global function</th><th>Description</th></tr></thead><tbody><tr><td><code>clearOutput()</code></td><td>Clears text from the Info panel.</td></tr><tr><td><code>currentFormatToTime()</code></td><td>Converts string time value to a numeric time value.</td></tr><tr><td><code>generateRandomNumber()</code></td><td>Generates a random number.</td></tr><tr><td><code>timeToCurrentFormat()</code></td><td>Converts a numeric time value to a string time value.</td></tr><tr><td><code>write()</code></td><td>Writes text to the Info panel, with no line break added.</td></tr><tr><td><code>writeLn()</code></td><td>Writes text to the Info panel, adding a line break at the end.</td></tr><tr><td><code>isValid()</code></td><td>When true, the specified object exists.</td></tr></tbody></table>",2),m=t("code",null,"alert",-1),h=t("code",null,"confirm",-1),f=t("code",null,"prompt",-1),g={href:"https://extendscript.docsforadobe.dev/",target:"_blank",rel:"noopener noreferrer"},b=a('<hr><h2 id="clearoutput-\xB6" tabindex="-1"><a class="header-anchor" href="#clearoutput-\xB6" aria-hidden="true">#</a> clearOutput()\xB6</h2><p><code>clearOutput()</code></p><p><strong>Description</strong></p><p>Clears the output in the Info panel.</p><p><strong>Parameters</strong></p><p>None.</p><p><strong>Returns</strong></p><p>Nothing.</p><hr><h2 id="currentformattotime-\xB6" tabindex="-1"><a class="header-anchor" href="#currentformattotime-\xB6" aria-hidden="true">#</a> currentFormatToTime()\xB6</h2><p><code>currentFormatToTime(formattedTime, fps[, isDuration])</code></p><p><strong>Description</strong></p>',13),k=a(`<p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>formattedTime</code></td><td>The frame time value, a string specifying a number of frames in the project\u2019scurrent time display format.</td></tr><tr><td><code>fps</code></td><td>The frames-per-second, a floating-point value.</td></tr><tr><td><code>isDuration</code></td><td>Optional. When true, the time is a duration (measured from frame 0). Whenfalse (the default), the time is measured from the project\u2019s starting frame.</td></tr></tbody></table><p><strong>Returns</strong></p><p>Floating-point value, the number of seconds.</p><hr><h2 id="generaterandomnumber-\xB6" tabindex="-1"><a class="header-anchor" href="#generaterandomnumber-\xB6" aria-hidden="true">#</a> generateRandomNumber()\xB6</h2><p><code>generateRandomNumber()</code></p><p>:::info Note</p><p>This functionality was added in After Effects 13.6 (CC 2015) ::: <strong>Description</strong></p><p>Generates random numbers. This function is recommended instead of<code>Math.random</code> for generating random numbers that will be applied as values ina project (e.g., when using setValue).</p><p>This method avoids a problem where <code>Math.random</code> would not return randomvalues in After Effects CC 2015 (13.5.x) due to a concurrency issue with multiple CPU threads.</p><p><strong>Returns</strong></p><p>Floating-point, pseudo-random number in the range [0, 1].</p><p><strong>Example</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// change the position X of all layers with random number var</span>
myComp <span class="token operator">=</span> app<span class="token punctuation">.</span>project<span class="token punctuation">.</span>activeItem<span class="token punctuation">;</span> <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span>myComp<span class="token punctuation">.</span>numLayers<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// If you use Math.random(), this does not work // x= 400 * (Math.random()) \u2013 200; // use new generateRandomNumber() instead x =400 * generateRandomNumber() \u2013 200; var currentPos =myComp.layer(i).property(&quot;Position&quot;).value;myComp.layer(i).property(&quot;Position&quot;).setValue([currentPos[0] + x,currentPos[1]]); }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="isvalid-\xB6" tabindex="-1"><a class="header-anchor" href="#isvalid-\xB6" aria-hidden="true">#</a> isValid()\xB6</h2><p><code>isValid(obj)</code></p><p><strong>Description</strong></p>`,19),v=a(`<p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>obj</code></td><td>The After Effects object to check for validity.</td></tr></tbody></table><p><strong>Returns</strong></p><p>Boolean.</p><p><strong>Example</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> layer <span class="token operator">=</span> app<span class="token punctuation">.</span>project<span class="token punctuation">.</span>activeItem<span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// assume layer</span>
has three masks <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">isValid</span><span class="token punctuation">(</span>layer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// displays &quot;true&quot; var mask1 =layer.mask(1); var mask2 = layer.mask(2); var mask3 = layer.mask(3);mask3.moveTo(1); // move the third mask to the top of the mask stackalert(isValid(mask1)); // displays &quot;false&quot;; mask2 and mask3 do as well</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="timetocurrentformat-\xB6" tabindex="-1"><a class="header-anchor" href="#timetocurrentformat-\xB6" aria-hidden="true">#</a> timeToCurrentFormat()\xB6</h2><p><code>timeToCurrentFormat(time, fps[, isDuration])</code></p><p><strong>Description</strong></p>`,10),y=a(`<p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>time</code></td><td>The number of seconds, a floating-point value.</td></tr><tr><td><code>fps</code></td><td>The frames-per-second, a floating-point value.</td></tr><tr><td><code>isDuration</code></td><td>Optional. When true, the time is a duration (measured from frame 0). Whenfalse (the default), the time is measured from the project\u2019s starting frame.</td></tr></tbody></table><p><strong>Returns</strong></p><p>String in the project\u2019s current time display format.</p><hr><h2 id="write-\xB6" tabindex="-1"><a class="header-anchor" href="#write-\xB6" aria-hidden="true">#</a> write()\xB6</h2><p><code>write(text)</code></p><p><strong>Description</strong></p><p>Writes output to the Info panel, with no line break added.</p><p><strong>Parameters</strong></p><p><code>text</code> The string to display. Truncated if too long for the Info panel.</p><p><strong>Returns</strong></p><p>Nothing.</p><p><strong>Example</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;This text appears in Info panel &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">write</span><span class="token punctuation">(</span>&quot;<span class="token keyword">with</span> more on
same line<span class="token punctuation">.</span>&quot;<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="writeln-\xB6" tabindex="-1"><a class="header-anchor" href="#writeln-\xB6" aria-hidden="true">#</a> writeLn()\xB6</h2><p><code>writeLn(text)</code></p><p><strong>Description</strong></p><p>Writes output to the Info panel and adds a line break at the end.</p><p><strong>Parameters</strong></p><p><code>text</code> The string to display.</p><p><strong>Returns</strong></p><p>Nothing.</p><p><strong>Example</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">writeLn</span><span class="token punctuation">(</span><span class="token string">&quot;This text appears on first line&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">writeLn</span><span class="token punctuation">(</span>&quot;This text
appears on second line&quot;<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,26);function w(x,_){const i=r("ExternalLinkIcon"),s=r("RouterLink");return d(),c("div",null,[u,t("p",null,[e("Additional global functions for standard user I/O ("),m,e(", "),h,e(" , and"),f,e(") and static functions for file I/O, are defined by ExtendScript; fordetailed reference information, see the "),t("a",g,[e("JavaScript ToolsGuide"),n(i)]),e(".")]),b,t("p",null,[e("Converts a formatted string for a frame time value to a number of seconds,given a specified frame rate. For example, if the formatted frame time valueis 0:00:12 (the exact string format is determined by a project setting), andthe frame rate is 24 fps, the time would be 0.5 seconds (12/24). If the framerate is 30 fps, the time would be 0.4 seconds (12/30). If the time is aduration, the frames are counted from 0. Otherwise, the frames are countedfrom the project\u2019s starting frame (see"),n(s,{to:"/en/ae/scripting/General/project.html#project-displaystartframe"},{default:o(()=>[e("Project.displayStartFrame")]),_:1}),e(").")]),k,t("p",null,[e("Determines if the specified After Effects object (e.g., composition, layer,mask, etc.) still exists. Some operations, such as"),n(s,{to:"/en/ae/scripting/properties/propertybase.html#propertybase-moveto"},{default:o(()=>[e("PropertyBase.moveTo()")]),_:1}),e(",might invalidate existing variable assignments to related objects. Thisfunction allows you to test whether those assignments are still valid beforeattempting to access them.")]),v,t("p",null,[e("Converts a numeric time value (a number of seconds) to a frame time value;that is, a formatted string thatshows which frame corresponds to that time, atthe specified rate. For example, if the time is 0.5 seconds, andthe frame rateis 24 fps, the frame would be 0:00:12 (when the project is set to display astimecode). If the framerate is 30 fps, the frame would be 0:00:15. The formatof the timecode string is determined by a project setting. If the time is aduration, the frames are counted from 0. Otherwise, the frames are countedfrom the project\u2019s starting frame (see "),n(s,{to:"/en/ae/scripting/General/project.html#project-displaystartframe"},{default:o(()=>[e("ProjectdisplayStartFrame")]),_:1}),e(" attribute).")]),y])}const C=p(l,[["render",w],["__file","Global.html.vue"]]);export{C as default};
