import{_ as d}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as s,a as t,b as e,d as a,e as r,r as c}from"./app.75ca2a8e.js";const i={},p=r("<p><strong>Description</strong></p><p>For all the Interpolation methods, the argument <code>t</code> is often <code>time</code> or<code>value</code>, though it can have other values, instead. If <code>t</code> is <code>time</code>, theinterpolation between values happens over a duration. If <code>t</code> is <code>value</code>, thenthe expression maps one range of values to a new range of values.</p>",2),l={href:"http://www.adobe.com/go/learn_ae_jjgiffordexpressionsinterpolation",target:"_blank",rel:"noopener noreferrer"},u={href:"http://provideocoalition.com/index.php/cmg_keyframes/story/deeper_modes_of_expression_part_2_interpolation_methods/",target:"_blank",rel:"noopener noreferrer"},h={href:"http://aescripts.com/ease-and-wizz/",target:"_blank",rel:"noopener noreferrer"},m={href:"http://blogs.adobe.com/toddkopriva/2010/10/tutorials-on-using-linear-expression-method.html",target:"_blank",rel:"noopener noreferrer"},v=r(`<hr><h2 id="linear-t-tmin-tmax-value1-value2" tabindex="-1"><a class="header-anchor" href="#linear-t-tmin-tmax-value1-value2" aria-hidden="true">#</a> linear(<code>t</code>, <code>tMin</code>, <code>tMax</code>, <code>value1</code>, <code>value2</code>)</h2><p><strong>Description</strong></p><p>Returns <code>value1</code> when <code>t &lt;= tMin</code>. Returns <code>value2</code> when <code>t &gt;= tMax</code>. Returnsa linear interpolation between <code>value1</code> and <code>value2</code> when <code>tMin &lt; t &lt; tMax</code>.</p><p>For example, this expression on the Opacity property causes Opacity values toramp linearly from <code>20%</code> to <code>80%</code> over the time from <code>0</code> seconds to <code>6</code> seconds:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">linear</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method\u2014like all the Interpolation methods\u2014can also be used to convertfrom one range of values to another.</p><p>For example, this expression on the Opacity property converts the Opacityvalues from the range <code>0%</code>-<code>100%</code> to the range <code>20%</code>-<code>80%</code>:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">linear</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>t</code></td><td>Number</td></tr><tr><td><code>tMin</code></td><td>Number</td></tr><tr><td><code>tMax</code></td><td>Number</td></tr><tr><td><code>value1</code></td><td>Number or Array</td></tr><tr><td><code>value2</code></td><td>Number or Array</td></tr></tbody></table><p><strong>Type</strong></p><p>Number or Array</p><hr><h2 id="linear-t-value1-value2" tabindex="-1"><a class="header-anchor" href="#linear-t-value1-value2" aria-hidden="true">#</a> linear(<code>t</code>, <code>value1</code>, <code>value2</code>)</h2><p><strong>Description</strong></p><p>Returns a value that linearly interpolates from <code>value1</code> to <code>value2</code> as <code>t</code>ranges from <code>0</code> to <code>1</code>. Returns <code>value1</code> when <code>t &lt;= 0</code>. Returns <code>value2</code> when <code>t &gt;= 1</code>.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>t</code></td><td>Number</td></tr><tr><td><code>value1</code></td><td>Number or Array</td></tr><tr><td><code>value2</code></td><td>Number or Array</td></tr></tbody></table><p><strong>Type</strong></p><p>Number or Array</p><hr><h2 id="ease-t-tmin-tmax-value1-value2" tabindex="-1"><a class="header-anchor" href="#ease-t-tmin-tmax-value1-value2" aria-hidden="true">#</a> ease(<code>t</code>, <code>tMin</code>, <code>tMax</code>, <code>value1</code>, <code>value2</code>)</h2><p><strong>Description</strong></p><p>Similar to linear with the same arguments, except that the interpolation easesin and out so that the velocity is <code>0</code> at the start and end points. Thismethod results in a smooth animation.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>t</code></td><td>Number</td></tr><tr><td><code>tMin</code></td><td>Number</td></tr><tr><td><code>tMax</code></td><td>Number</td></tr><tr><td><code>value1</code></td><td>Number or Array</td></tr><tr><td><code>value2</code></td><td>Number or Array</td></tr></tbody></table><p><strong>Type</strong></p><p>Number or Array</p><hr><h2 id="ease-t-value1-value2" tabindex="-1"><a class="header-anchor" href="#ease-t-value1-value2" aria-hidden="true">#</a> ease(<code>t</code>, <code>value1</code>, <code>value2</code>)</h2><p><strong>Description</strong></p><p>Similar to linear with the same arguments, except that the interpolation easesin and out so that the velocity is <code>0</code> at the start and end points. Thismethod results in a smooth animation.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>t</code></td><td>Number</td></tr><tr><td><code>value1</code></td><td>Number or Array</td></tr><tr><td><code>value2</code></td><td>Number or Array</td></tr></tbody></table><p><strong>Type</strong></p><p>Number or Array</p><hr><h2 id="easein-t-tmin-tmax-value1-value2" tabindex="-1"><a class="header-anchor" href="#easein-t-tmin-tmax-value1-value2" aria-hidden="true">#</a> easeIn(<code>t</code>, <code>tMin</code>, <code>tMax</code>, <code>value1</code>, <code>value2</code>)</h2><p><strong>Description</strong></p><p>Similar to ease, except that the tangent is <code>0</code> only on the <code>tMin</code> side andinterpolation is <code>linear</code> on the <code>tMax</code> side.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>t</code></td><td>Number</td></tr><tr><td><code>tMin</code></td><td>Number</td></tr><tr><td><code>tMax</code></td><td>Number</td></tr><tr><td><code>value1</code></td><td>Number or Array</td></tr><tr><td><code>value2</code></td><td>Number or Array</td></tr></tbody></table><p><strong>Type</strong></p><p>Number or Array</p><hr><h2 id="easein-t-value1-value2" tabindex="-1"><a class="header-anchor" href="#easein-t-value1-value2" aria-hidden="true">#</a> easeIn(<code>t</code>, <code>value1</code>, <code>value2</code>)</h2><p><strong>Description</strong></p><p>Similar to ease, except that the tangent is <code>0</code> only on the <code>value1</code> side andinterpolation is <code>linear</code> on the <code>value2</code> side.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>t</code></td><td>Number</td></tr><tr><td><code>value1</code></td><td>Number or Array</td></tr><tr><td><code>value2</code></td><td>Number or Array</td></tr></tbody></table><p><strong>Type</strong></p><p>Number or Array</p><hr><h2 id="easeout-t-tmin-tmax-value1-value2" tabindex="-1"><a class="header-anchor" href="#easeout-t-tmin-tmax-value1-value2" aria-hidden="true">#</a> easeOut(<code>t</code>, <code>tMin</code>, <code>tMax</code>, <code>value1</code>, <code>value2</code>)</h2><p><strong>Description</strong></p><p>Similar to ease, except that the tangent is <code>0</code> only on the <code>tMax</code> side andinterpolation is <code>linear</code> on the <code>tMin</code> side.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>t</code></td><td>Number</td></tr><tr><td><code>tMin</code></td><td>Number</td></tr><tr><td><code>tMax</code></td><td>Number</td></tr><tr><td><code>value1</code></td><td>Number or Array</td></tr><tr><td><code>value2</code></td><td>Number or Array</td></tr></tbody></table><p><strong>Type</strong></p><p>Number or Array</p><hr><h2 id="easeout-t-value1-value2" tabindex="-1"><a class="header-anchor" href="#easeout-t-value1-value2" aria-hidden="true">#</a> easeOut(<code>t</code>, <code>value1</code>, <code>value2</code>)</h2><p><strong>Description</strong></p><p>Similar to ease, except that the tangent is <code>0</code> only on the <code>value2</code> side andinterpolation is <code>linear</code> on the <code>value1</code> side.</p><p><strong>Parameters</strong></p><table><thead><tr><th>Property</th><th>Type</th></tr></thead><tbody><tr><td><code>t</code></td><td>Number</td></tr><tr><td><code>value1</code></td><td>Number or Array</td></tr><tr><td><code>value2</code></td><td>Number or Array</td></tr></tbody></table><p><strong>Type</strong></p><p>Number or Array</p>`,69);function b(g,y){const o=c("ExternalLinkIcon");return n(),s("div",null,[p,t("p",null,[e("For additional explanations and examples of the Interpolation methods, see "),t("a",l,[e("JJ Gifford\u2019s website"),a(o)]),e(".")]),t("p",null,[e("Chris and Trish Meyer provide additional information and examples for thesemethods in an article on the "),t("a",u,[e("ProVideo Coalitionwebsite"),a(o)]),e(".")]),t("p",null,[e("Ian Haigh provides a script on "),t("a",h,[e("After Effects Scriptswebsite"),a(o)]),e(" that you can use to easily applyadvanced interpolation method expressions\u2014such as bounces\u2014to properties.")]),t("p",null,[e("Andrew Devis provides a "),t("a",m,[e("pair of videotutorials"),a(o)]),e(" on the Creative COW website that show in detailhow to use the linear expression method along with the Convert Audio To Keyframes command.")]),v])}const N=d(i,[["render",b],["__file","Interpolation.html.vue"]]);export{N as default};
